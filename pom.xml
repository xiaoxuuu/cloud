<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cloud</artifactId>
    <description>A Spring Cloud Project.</description>
    <groupId>cc.xiaoxu</groupId>
    <name>cloud</name>
    <packaging>pom</packaging>
    <version>1.0</version>

    <modules>
        <module>cloud-base</module>
        <module>cloud-api</module>
        <module>cloud-api-all</module>
        <module>cloud-gateway</module>
        <module>clond-auth</module>
        <module>cloud-remote</module>
        <module>cloud-bean</module>
    </modules>

    <properties>
        <!-- 内置 -->
        <cloud.version>1.0</cloud.version>
        <java.version>21</java.version>
        <project.encoding>UTF-8</project.encoding>

        <!-- mvn 参数-->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>${project.encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.encoding}</project.reporting.outputEncoding>

        <!-- 打包相关参数 -->
        <jib-maven-plugin.version>3.3.2</jib-maven-plugin.version>
        <spring-boot-maven-plugin.version>3.1.1</spring-boot-maven-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>

        <!-- 镜像仓库信息 -->
        <env.namespace>?</env.namespace>
        <env.image.warehouse.url>?</env.image.warehouse.url>

        <!-- 镜像仓库鉴权信息 -->
        <env.image.warehouse.username>?</env.image.warehouse.username>
        <env.image.warehouse.password>?</env.image.warehouse.password>

        <!-- db 鉴权信息 -->
        <env.api.db.type>postgresql</env.api.db.type>
        <env.api.db.host>localhost</env.api.db.host>
        <env.api.db.port>3306</env.api.db.port>
        <env.api.db.username>root</env.api.db.username>
        <env.api.db.password>root</env.api.db.password>

        <!-- redis 鉴权信息 -->
        <env.api.redis.host>localhost</env.api.redis.host>
        <env.api.redis.port>6379</env.api.redis.port>
        <env.api.redis.password>password</env.api.redis.password>
        <env.api.redis.database>0</env.api.redis.database>

        <!-- 微信公众号配置 -->
        <env.api.wechat.mp.app.id>0</env.api.wechat.mp.app.id>
        <env.api.wechat.mp.secret>0</env.api.wechat.mp.secret>
        <env.api.wechat.mp.token>0</env.api.wechat.mp.token>
        <env.api.wechat.mp.aes.key>0</env.api.wechat.mp.aes.key>

        <!-- 阿里云配置 -->
        <env.api.ali.access.key.id>0</env.api.ali.access.key.id>
        <env.api.ali.access.key.secret>0</env.api.ali.access.key.secret>
        <!-- 阿里云百炼配置 -->
        <env.api.ali.bailian.api.key>0</env.api.ali.bailian.api.key>
        <env.api.ali.bailian.workspace.id>0</env.api.ali.bailian.workspace.id>
        <env.api.ali.bailian.category.id>0</env.api.ali.bailian.category.id>
        <env.api.ali.bailian.index.id>0</env.api.ali.bailian.index.id>

        <env.knife4j.password>0</env.knife4j.password>

        <!-- JVM 设置 -->
        <env.jvm.xms>-Xms256m</env.jvm.xms>
        <env.jvm.xmx>-Xmx256m</env.jvm.xmx>

        <!-- nacos -->
        <env.nacos.server>127.0.0.1:8848</env.nacos.server>
        <env.nacos.username>nacos</env.nacos.username>
        <env.nacos.password>nacos</env.nacos.password>

        <!-- spring -->
        <spring-boot-dependencies.version>3.3.2</spring-boot-dependencies.version>
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <spring-cloud-alibaba.version>2023.0.1.2</spring-cloud-alibaba.version>
        <spring-cloud-starter-gateway.version>4.1.1</spring-cloud-starter-gateway.version>
        <!-- [版本说明](https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E) -->
        <spring-cloud-starter-alibaba-nacos-discovery.version>2023.0.0.0-RC1
        </spring-cloud-starter-alibaba-nacos-discovery.version>
        <mybatis-spring-boot-starter.version>3.0.3</mybatis-spring-boot-starter.version>
        <mybatis-plus-boot-starter.version>3.5.5</mybatis-plus-boot-starter.version>

        <!-- 工具类相关 -->
        <lombok.version>1.18.32</lombok.version>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <fastjson2.version>2.0.46</fastjson2.version>

        <!-- 文档 -->
        <swagger-annotations-jakarta.version>2.2.23</swagger-annotations-jakarta.version>
        <knife4j-openapi3-jakarta-spring-boot-starter.version>4.3.0
        </knife4j-openapi3-jakarta-spring-boot-starter.version>

        <!-- db -->
        <mysql-connector-java.version>8.0.33</mysql-connector-java.version>
        <postgresql.version>42.7.3</postgresql.version>

        <sa-token.version>1.38.0</sa-token.version>
        <dubbo-spring-boot-starter.version>3.2.14</dubbo-spring-boot-starter.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- 服务 -->
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-api-ai</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-api-file</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-api-my</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <!-- 基础依赖 -->
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-doc</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-ai</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-dubbo</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-database</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-redis</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-satoken</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-spring</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-base-utils</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <!-- bean -->
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-bean-ai</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-bean-common</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-bean-file</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-bean-my</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <!-- 远程调用 -->
            <dependency>
                <groupId>cc.xiaoxu</groupId>
                <artifactId>cloud-remote-file</artifactId>
                <version>${cloud.version}</version>
            </dependency>

            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- 工具类 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>

            <!-- spring-boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud 微服务 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- SpringCloud Ali -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>
            <!-- postgresql -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!-- mybatis-plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis-plus-boot-starter.version}</version>
            </dependency>

            <!-- 文档 -->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations-jakarta</artifactId>
                <version>${swagger-annotations-jakarta.version}</version>
            </dependency>
            <!-- knife4j -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-openapi3-jakarta-spring-boot-starter</artifactId>
                <version>${knife4j-openapi3-jakarta-spring-boot-starter.version}</version>
            </dependency>

            <!-- sa-token -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-spring-boot3-starter</artifactId>
                <version>${sa-token.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-redis-jackson</artifactId>
                <version>${sa-token.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-jwt</artifactId>
                <version>${sa-token.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-spring-boot-starter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib-maven-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 仓库 -->
    <repositories>
        <!-- maven.org 中央仓库 -->
        <repository>
            <id>maven-repo</id>
            <name>maven repo</name>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <!-- aliyun -->
        <repository>
            <id>aliyun-public</id>
            <name>aliyun public</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>aliyun-central</id>
            <name>aliyun central</name>
            <url>https://maven.aliyun.com/repository/central</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- Spring -->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>
                <!-- jar 打包插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- docker 打包插件 -->
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <configuration>
                        <!-- 容器相关设置 -->
                        <container>
                            <!-- jvm 参数 -->
                            <jvmFlags>
                                <jvmFlag>${env.jvm.xms}</jvmFlag>
                                <jvmFlag>${env.jvm.xmx}</jvmFlag>
                                <jvmFlag>-Dfile.encoding=utf-8</jvmFlag>
                                <jvmFlag>-Duser.timezone=Asia/Shanghai</jvmFlag>
                            </jvmFlags>
                            <!-- 创建时间 -->
                            <creationTime>${maven.build.timestamp}</creationTime>
                            <!-- 放置应用程序内容的容器上的根目录 -->
                            <appRoot>/home</appRoot>
                            <!-- 容器在运行时公开的端口 -->
                            <!--                        <ports>23333</ports>-->
                            <!-- 容器中的工作目录 -->
                            <workingDirectory>/home/java</workingDirectory>
                            <mainClass>cc.xiaoxu.cloud.AllApplication</mainClass>
                            <!-- 指定运行的参数 -->
                            <environment>
                                <TZ>Asia/Shanghai</TZ>
                            </environment>
                        </container>
                        <!-- 基础镜像，如果是私服，需要加上鉴权信息，和 to 下的 auth 节点相同 -->
                        <from>
                            <image>${env.image.warehouse.url}/${env.namespace}/openjdk:${maven.compiler.target}</image>
                            <auth>
                                <username>${env.image.warehouse.username}</username>
                                <password>${env.image.warehouse.password}</password>
                            </auth>
                        </from>
                        <!-- 构建后的镜像名称以及私服地址、鉴权信息 -->
                        <to>
                            <image>${env.image.warehouse.url}/${env.namespace}/${project.artifactId}:${cloud.version}
                            </image>
                            <auth>
                                <username>${env.image.warehouse.username}</username>
                                <password>${env.image.warehouse.password}</password>
                            </auth>
                        </to>
                        <!-- 允许非 https -->
                        <allowInsecureRegistries>true</allowInsecureRegistries>
                    </configuration>
                    <!-- 将 jib 与 mvn 构建的生命周期绑定 mvn install 自动构造镜像 -->
                    <!-- 打包及推送命令 mvn -DsendCredentialsOverHttp=true -Dmaven.test.skip=true clean install -->
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>get-git-info</id>
                            <phase>package</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <!--  设置可执行文件为 shell 脚本 -->
                                <executable>sh</executable>
                                <!-- 脚本文件路径 (相对于项目根目录) -->
                                <arguments>
                                    <argument>${maven.multiModuleProjectDirectory}/resources/generate_git_info.sh
                                    </argument>
                                    <argument>${project.basedir}</argument>
                                </arguments>
                                <!-- 输出日志 -->
                                <outputFile>git-info.log</outputFile>
                                <workingDirectory>${maven.multiModuleProjectDirectory}/resources</workingDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-git-info</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/classes</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${basedir}/src/main/resources</directory>
                                        <includes>
                                            <include>git-info.yaml</include>
                                        </includes>
                                        <filtering>true</filtering>  <!-- important -->
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>